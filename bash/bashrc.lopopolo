# shellcheck shell=bash
# vim: filetype=sh

DOTFILES_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." &> /dev/null && pwd)

# unset prompt command. This is the beginning of initialization so we aren't in danger of losing
# anything. If we don't unset it, we end up chaining calls to the function prompt_command which
# breaks coloring the PS1 based on exit code
unset PROMPT_COMMAND

unset -f prepend_to_path
function prepend_to_path
{
  if ! [[ "$PATH" =~ (^|:)${1}($|:) ]]; then
    export PATH="$1:${PATH}"
  fi
}

unset -f append_to_path
function append_to_path
{
  if ! [[ "$PATH" =~ (^|:)${1}($|:) ]]; then
    export PATH="${PATH}:$1"
  fi
}

# Pull in platform-specific configurations.
if [[ "$(uname)" == "Linux" ]]; then
  export PLATFORM=LINUX # for scripts
  # shellcheck source=bash/bashrc.linux
  source "$DOTFILES_ROOT/bash/bashrc.linux"
elif [[ "$(uname)" == "Darwin" ]]; then
  export PLATFORM=MAC
  # shellcheck source=bash/bashrc.mac
  source "$DOTFILES_ROOT/bash/bashrc.mac"
fi

# TERM setup
export CLICOLOR=1
export TERM="xterm-256color"
# colors
export RED="\\033[0;31m"
export GREEN="\\033[0;32m"
export YELLOW="\\033[0;33m"
export BLUE="\\033[0;34m"
export WHITE="\\033[0;37m"
export PLAIN="\\033[m"

# bash history
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# https://news.ycombinator.com/item?id=11811272
export HISTCONTROL=ignoreboth
export HISTSIZE=1000000
export HISTFILESIZE=1000000
export HISTIGNORE="ls:exit:history:[bf]g:jobs"
shopt -s histappend

# #1 best bash config option of all time. Also, see .inputrc for more vi goodness in readline-enabled apps.
set -o vi

prepend_to_path "$DOTFILES_ROOT/scripts"

export EDITOR
EDITOR="$(which vim)"

# =========================================================================== #
# Aliases
# =========================================================================== #
alias src='source ~/.bashrc'
alias la='ls -la'

# Make it quicker to edit the bashrc's
alias b='vim $DOTFILES_ROOT/bash/bashrc.lopopolo'
alias bm='vim $DOTFILES_ROOT/bash/bashrc.mac'
alias bl='vim $DOTFILES_ROOT/bash/bashrc.linux'
# and vimrc
alias vv='vim ~/.vimrc'

# Alias g=git and add bash completion
alias g='git'
complete -o bashdefault -o default -o nospace -F _git g

# Same for vim
alias v='vim'
complete -o filenames -F _filedir_xspec v

# json pretty printing
alias jsonpp='python -mjson.tool'

# =========================================================================== #
# useful shell functions
# =========================================================================== #
unset -f freq
unset -f is_not_ascii
unset -f diff_line_count
unset -f rand_string

# freq prints out a list of my most frequently used commands
function freq
{
  cut -d" " -f1 ~/.bash_history | grep -Ev "^[[:space:]]*$" | sort | uniq -c | sort -rn | head
}

# This function prints out lines in the given files that
# contain non-ascii characters
function is_not_ascii
{
  if [[ "$#" == "0" ]]; then
    echo "Usage: $0 file1 file2 ..."
    return 1
  fi
  local argc="$#"
  while (( "$#" )); do
    if [[ "$argc" -gt "1" ]]; then echo "$1:"; fi
    perl -nwe 'print if /[^[:ascii:]]/' "$1"
    shift
  done
}

function diff_line_count
{
  while read -r line; do
    echo -e "${GREEN}+$(echo "$line" | awk '{ print $1 }')\\t${RED}-$(echo "$line" | awk '{ print $2 }')\\t${PLAIN}$(echo "$line" | awk '{ print $3 }')"
  done < <(git diff --numstat "$@")
}

function rand_string {
  LANG=C < /dev/urandom tr -dc A-HJ-KM-NP-Za-km-np-z2-9 | head -c"${1:-32}"
  echo
}

# =========================================================================== #
# Prompt
# =========================================================================== #

# Let's get a nice colorized prompt which knows about git
# shellcheck source=bash/git_ps1.lopopolo.bash
source "$DOTFILES_ROOT/bash/git_ps1.lopopolo.bash"

# This PS1 does the following:
# * Set terminal title to hostname : current directory name
# * prints [24-hour time|username|hostname]
# * prints current working directory
# * prints current branch and git state, colorized
function prompt_command
{
  local -r EXITSTATUS="$?"
  local -r GITSTATUS="$(git_ps1_lopopolo)"

  local PROMPTCOLOR="$GREEN"
  if [[ "$EXITSTATUS" != "0" ]]; then
    PROMPTCOLOR="$RED"
  fi

  # if we're on a mac, add battery info
  local BATTERYSTATUS=" "
  if [ "$PLATFORM" == "MAC" ]; then
    BATTERYSTATUS="$(battery -p) "
  fi

  local PYVENV=""
  if [[ -n "$VIRTUAL_ENV" ]]; then
    PYVENV="($(basename "$VIRTUAL_ENV")) "
  fi

  local TERMTITLE="\\033]0;\\h : \\W\\007"
  local PROMPTLINE="\\[$YELLOW\\]$PYVENV\\[$PLAIN\\]\\[$PROMPTCOLOR\\]â–¶\\[$PLAIN\\] "
  local NOW
  NOW="$(date +%H:%M)"
  export PS1="$TERMTITLE\\[$WHITE\\][$NOW|\\u|\\h] [\\w] ${BATTERYSTATUS}${GITSTATUS}\\n${PROMPTLINE}"
}
shopt -u promptvars
PROMPT_COMMAND="prompt_command;$PROMPT_COMMAND"
export PS1='$ '

# =========================================================================== #
# Tools
# =========================================================================== #

# stuff for moving around directories
# https://bosker.wordpress.com/2012/02/12/bash-scripters-beware-of-the-cdpath/
CDPATH=".:$HOME:$DOTFILES_ROOT:$HOME/dev:$HOME/dev/repos"

export GOPATH="$HOME/dev/gopath"
prepend_to_path "$GOPATH/bin"
